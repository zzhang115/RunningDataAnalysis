Docker:

Create Vm:
docker-machine create --driver virtualbox --virtualbox-cpu-count 2 --virtualbox-memory 2048 bigdata(VM name)

Check Vm Ip Address:
Docker-machine ip bigdata

After reboot system: # use terminal to link our virtual box host
Docker-machine start bigdata

Run Vm When Open A New Terminal Window Every Time:
eval $(docker-machine env bigdata)
docker run -d -p 3000:3000 unclebarney/chit-chat
docker images
docker ps
docker start `docker ps -a` # may run this command twice
docker start $(docker ps -a -q --filter "status=exited")
docker exec -it kafka bash

Zookeeper Server:
docker run -d -p 2181:2181 -p 2888:2888 -p 3888:3888 --name zookeeper confluent/zookeeper
docker images
docker ps
docker ps -a

Zookeeper CLI:
cd zookeeper/bin (MacOS, Linux, Unix)
./zkCli.sh -server `docker-machine ip bigdata`:2181
./zkCli.sh -server localhost:2181

Browse Znode Data:
ls /
ls /zookeeper
get /zookeeper/quota

Create Znode Data:
create /workers "bittiger"
ls /
ls /workers
get /workers

Delete Znode Data:
delete /workers
ls /
ls /workers
get /workers

Create Ephemeral Znode Data:
create -e /workers "unclebarney"
ls /
ls /workers
get /workers

Watcher:
get /workers true

可以使用virtualenv来进行开发环境隔离
pip install virtualenv
virtualenv env
source env/bin/active (MacOS *nix)
pip list # to check package we have installed in current virtualenv
deactivate # to exit virtual env

Start Kafka Server:
docker run -d -p 9092:9092 -e KAFKA_ADVERTISED_HOST_NAME=`docker-machine ip bigdata` -e KAFKA_ADVERTISED_PORT=9092 --name kafka --link zookeeper:zookeeper confluent/kafka
docker images
docker ps

Create Kafka Topic:
./kafka-topics.sh --create --zookeeper `docker-machine ip bigdata` --replication-factor 1 --partitions 1 --topic bigdata
./kafka-topics.sh --list --zookeeper `docker-machine ip bigdata`

Look up on Zookeeper:
./zkCli.sh -server `docker-machine ip bigdata`:2181
ls /

Produce Messages:
./kafka-console-producer.sh --broker-list `docker-machine ip bigdata`:9092 --topic bigdata

Consume Messages:
./kafka-console-consumer.sh --zookeeper `docker-machine ip bigdata`:2181 --topic bigdata
./kafka-console-consumer.sh --zookeeper `docker-machine ip bigdata`:2181 --topic bigdata --from-beginning

Look Into Kafka Broker:
docker exec -it kafka bash
cd /var/lib/kafka
ls

Start Cassandra Server:
docker run -d -p 7199:7199 -p 9042:9042 -p 9160:9160 -p 7001:7001 --name cassandra cassandra:3.7
docker images
docker ps

Get Cassandra CLI:
./cqlsh `docker-machine ip bigdata` 9042(Mac, Linux, Unix)

Create Keyspace:
./cqlsh `docker-machine ip bigdata` 9042
CREATE KEYSPACE “stock” WITH replication = {'class': 'SimpleStrategy', 'replication_factor':
1} AND durable_writes = 'true';
USE stock;
DESCRIBE KEYSPACE;

Create Table:
./cqlsh `docker-machine ip bigdata` 9042
CREATE TABLE user ( first_name text, last_name text, PRIMARY KEY (first_name));
DESCRIBE TABLE user;

Insert Data:
./cqlsh `docker-machine ip bigdata` 9042
INSERT INTO user (first_name, last_name) VALUES ('uncle', 'barney');

Query Data:
./cqlsh `docker-machine ip bigdata` 9042
SELECT COUNT (*) FROM USER;
SELECT * FROM user WHERE first_name='uncle';
SELECT * FROM user WHERE last_name='barney';

Look Into Cassandra Node:
docker exec -it cassandra bash
cd /var/lib/cassandra
ls

Delete Data:
./cqlsh `docker-machine ip bigdata` 9042
DELETE last_name FROM user WHERE first_name='uncle';
DELETE FROM user WHERE first_name='uncle';

Remove Table:
./cqlsh `docker-machine ip bigdata` 9042
TRUNCATE user;
DROP TABLE user;
